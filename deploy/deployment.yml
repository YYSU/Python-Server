apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-server-deployment
  labels:
    app: python
spec:
  replicas: 8
  selector:
    matchLabels:
      app: python
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 0
  template:
    metadata:
      labels:
        app: python
    spec:
      containers:
      - name: server
        image: # my repo
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: MESSAGE
          value: Testing v1
---
apiVersion: v1
kind: Service
metadata:
  name: python-service
spec:
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app: python
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-python
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '10'
    #alb.ingress.kubernetes.io/target-type: ip
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: python-service
              servicePort: 80